function hashed-host-modulo() {
	# Argument: the number of elements to sum the digits of the md5 sum of the
	# hostname over.
	# If there's a missing md5 program, no output is returned
	autoload -z prog-exists
	local hashed_host
	# Use a normalized hostname: only lower-case letters, numbers, and '-'
	local normalized_host="${${(L)HOST}//[^-a-z0-9]}"
	# BSD includes md5, GNU and Solaris include md5sum
	if prog-exists md5; then
		hashed_host=$(printf "%s" "$normalized_host" | md5)
	elif prog-exists md5sum; then
		hashed_host=$(printf "%s" "$normalized_host" | md5sum)
	fi
	# Now hash the input name, and add all of the digits together modulo
	# `len(available_colors)`. 
	if [ ! -z "$hashed_host" ]; then
		# Sum all the digits modulo MAX_COLORS
		local -i SUM=0
		for ((i=0; i<32; ++i)); do
			SUM=$(( $SUM + 0x${hashed_host:$i:1} ))
		done
		SUM=$(( $SUM % ($1 * 2) ))
		echo $(( $SUM % $1 ))
	fi
}